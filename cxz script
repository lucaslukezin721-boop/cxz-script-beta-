--[[ 
CXZ Script (Beta) - Otimizador + Botão Toggle
Autor: Você
Funções: Otimização gráfica, remover efeitos, partículas, decals, animações, etc.
]]

--===== Serviços =====--
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer

--===== Estados e Backups =====--
local State = { RemoveFX=false, LowGFX=false, NoAnims=false, HideParticles=false, HideDecals=false }
local Backup = {
    Lighting={}, Parts=setmetatable({}, {__mode="k"}),
    Particles=setmetatable({}, {__mode="k"}), Decals=setmetatable({}, {__mode="k"}),
    CharTracks={}, Terrain={}
}

--===== Funções utilitárias =====--
local function safeSet(obj, prop, value, bucket)
    if not obj then return end
    if bucket and bucket[obj] == nil then bucket[obj] = {[prop]=obj[prop]} end
    pcall(function() obj[prop] = value end)
end
local function restoreBucket(bucket)
    for obj, props in pairs(bucket) do
        if obj and obj.Parent then for prop,original in pairs(props) do pcall(function() obj[prop] = original end) end end
    end
    table.clear(bucket)
end
local function each(classNames, root)
    root = root or workspace
    return coroutine.wrap(function()
        for _,inst in ipairs(root:GetDescendants()) do
            for _,cn in ipairs(classNames) do
                if inst:IsA(cn) then coroutine.yield(inst) end
            end
        end
    end)
end

--===== Funções principais =====--
local function applyRemoveFX(on)
    State.RemoveFX = on
    if on then
        if next(Backup.Lighting) == nil then
            for _,k in ipairs({"FogStart","FogEnd","Brightness","GlobalShadows","EnvironmentDiffuseScale","EnvironmentSpecularScale"}) do
                Backup.Lighting[k] = Lighting[k]
            end
        end
        safeSet(Lighting, "FogStart", 1e9, Backup.Lighting)
        safeSet(Lighting, "FogEnd", 1e9, Backup.Lighting)
        safeSet(Lighting, "Brightness", 2, Backup.Lighting)
        safeSet(Lighting, "GlobalShadows", false, Backup.Lighting)
        safeSet(Lighting, "EnvironmentDiffuseScale", 0, Backup.Lighting)
        safeSet(Lighting, "EnvironmentSpecularScale", 0, Backup.Lighting)
        for inst in each({"BloomEffect","DepthOfFieldEffect","ColorCorrectionEffect","SunRaysEffect"}, Lighting) do
            safeSet(inst, "Enabled", false, Backup.Particles)
        end
        local at = Lighting:FindFirstChildOfClass("Atmosphere")
        if at then safeSet(at, "Density", 0, Backup.Particles) safeSet(at, "Haze", 0, Backup.Particles) end
    else
        for k,v in pairs(Backup.Lighting) do pcall(function() Lighting[k] = v end) end
        table.clear(Backup.Lighting)
        restoreBucket(Backup.Particles)
    end
end

local function applyLowGFX(on)
    State.LowGFX = on
    if on then
        safeSet(Lighting, "GlobalShadows", false, Backup.Lighting)
        safeSet(Lighting, "EnvironmentDiffuseScale", 0, Backup.Lighting)
        safeSet(Lighting, "EnvironmentSpecularScale", 0, Backup.Lighting)
        for part in each({"BasePart"}) do
            if not Backup.Parts[part] then
                Backup.Parts[part] = {Material=part.Material, Reflectance=part.Reflectance, CastShadow=part.CastShadow}
            end
            pcall(function()
                part.Material = Enum.Material.Plastic
                part.Reflectance = 0
                part.CastShadow = false
            end)
        end
        local terrain = workspace:FindFirstChildOfClass("Terrain")
        if terrain then
            Backup.Terrain.Decoration = terrain.Decoration
            safeSet(terrain, "Decoration", false, Backup.Terrain)
        end
    else
        restoreBucket(Backup.Parts)
        for k,v in pairs(Backup.Lighting) do pcall(function() Lighting[k] = v end) end
        table.clear(Backup.Lighting)
        local terrain = workspace:FindFirstChildOfClass("Terrain")
        if terrain then for k,v in pairs(Backup.Terrain) do pcall(function() terrain[k] = v end) end end
        table.clear(Backup.Terrain)
    end
end

local Char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Char:WaitForChild("Humanoid")
local NoAnimConn
local function applyNoAnims(on)
    State.NoAnims = on
    if on then
        for _,track in ipairs(Humanoid:FindFirstChildOfClass("Animator"):GetPlayingAnimationTracks()) do pcall(function() track:Stop(0) end) end
        if NoAnimConn then NoAnimConn:Disconnect() end
        NoAnimConn = Humanoid.AnimationPlayed:Connect(function(track) pcall(function() track:Stop(0) end) end)
    else
        if NoAnimConn then NoAnimConn:Disconnect() NoAnimConn = nil end
    end
end
LocalPlayer.CharacterAdded:Connect(function(c) Humanoid = c:WaitForChild("Humanoid") if State.NoAnims then applyNoAnims(true) end end)

local function applyHideParticles(on)
    State.HideParticles = on
    if on then
        for inst in each({"ParticleEmitter","Trail","Beam"}) do
            if inst:IsA("Beam") then safeSet(inst, "Transparency", NumberSequence.new(1), Backup.Particles)
            else safeSet(inst, "Enabled", false, Backup.Particles) end
        end
    else restoreBucket(Backup.Particles) end
end

local function applyHideDecals(on)
    State.HideDecals = on
    if on then
        for inst in each({"Decal","Texture"}) do safeSet(inst, "Transparency", 1, Backup.Decals) end
    else restoreBucket(Backup.Decals) end
end

local function restoreAll()
    applyRemoveFX(false) applyLowGFX(false) applyNoAnims(false) applyHideParticles(false) applyHideDecals(false)
end

--===== UI =====--
local gui = Instance.new("ScreenGui")
gui.Name = "CXZ_UI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Botão CXZ
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.fromOffset(50, 50)
toggleButton.Position = UDim2.new(1, -60, 1, -60)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 200)
toggleButton.Text = "CXZ"
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 14
toggleButton.Parent = gui
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(1, 0)

-- Painel
local frame = Instance.new("Frame")
frame.Size = UDim2.fromOffset(260, 220)
frame.Position = UDim2.new(0, 12, 0, 12)
frame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
frame.BorderSizePixel = 0
frame.Visible = false
frame.Parent = gui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

local top = Instance.new("TextLabel")
top.BackgroundTransparency = 1
top.Size = UDim2.new(1, -24, 0, 24)
top.Position = UDim2.new(0, 12, 0, 6)
top.Font = Enum.Font.GothamBold
top.TextSize = 16
top.TextXAlignment = Enum.TextXAlignment.Left
top.TextColor3 = Color3.new(1,1,1)
top.Text = "CXZ Script (Beta)"
top.Parent = frame

-- Função para criar toggle
local function makeToggle(text, order, default, cb)
    local container = Instance.new("TextButton")
    container.AutoButtonColor = true
    container.BackgroundColor3 = Color3.fromRGB(45,45,45)
    container.Size = UDim2.new(1, -24, 0, 28)
    container.Position = UDim2.new(0, 12, 0, 30 + (order*32))
    container.Text = ""
    container.Parent = frame
    Instance.new("UICorner", container).CornerRadius = UDim.new(0,8)
    local lbl = Instance.new("TextLabel")
    lbl.BackgroundTransparency = 1
    lbl.Size = UDim2.new(1, -70, 1, 0)
    lbl.Position = UDim2.new(0, 10, 0, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Text = text
    lbl.Parent = container
    local pill = Instance.new("Frame")
    pill.Size = UDim2.fromOffset(54, 22)
    pill.Position = UDim2.new(1, -64, 0.5, -11)
    pill.BackgroundColor3 = Color3.fromRGB(24,24,24)
    pill.Parent = container
    Instance.new("UICorner", pill).CornerRadius = UDim.new(1,0)
    local knob = Instance.new("Frame")
    knob.Size = UDim2.fromOffset(22, 22)
    knob.Position = UDim2.new(0, 0, 0, 0)
    knob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    knob.Parent = pill
    Instance.new("UICorner", knob).CornerRadius = UDim.new(1,0)
    local on = default
    local function render()
        pill.BackgroundColor3 = on and Color3.fromRGB(0, 200, 200) or Color3.fromRGB(24,24,24)
        knob.Position = on and UDim2.new(1, -22, 0, 0) or UDim2.new(0, 0, 0, 0)
    end
    render()
    container.MouseButton1Click:Connect(function()
        on = not on
        render()
        cb(on)
    end)
end

-- Função para botão simples
local function makeButton(text, order, cb)
    local btn = Instance.new("TextButton")
    btn.AutoButtonColor = true
    btn.BackgroundColor3 = Color3.fromRGB(0, 180, 180)
    btn.Size = UDim2.new(1, -24, 0, 28)
    btn.Position = UDim2.new(0, 12, 0, 30 + (order*32))
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Text = text
    btn.Font = Enum.Font.GothamSemibold
    btn.TextSize = 14
    btn.Parent = frame
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,8)
    btn.MouseButton1Click:Connect(cb)
end

-- Toggles
makeToggle("Tirar Efeitos", 0, false, applyRemoveFX)
makeToggle("Melhorar FPS (Low GFX)", 1, false, applyLowGFX)
makeToggle("Tirar Animações", 2, false, applyNoAnims)
makeToggle("Esconder Partículas/Beams", 3, false, applyHideParticles)
makeToggle("Esconder Decals/Textures", 4, false, applyHideDecals)

-- Botão de restaurar
makeButton("Restaurar Tudo", 6, restoreAll)

-- Abrir/fechar painel
toggleButton.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
end)

print("[CXZ Script] Carregado com botão toggle.")
